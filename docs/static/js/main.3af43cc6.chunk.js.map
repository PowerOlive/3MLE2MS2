{"version":3,"sources":["mushroom.png","bg2.jpg","RefreshIcon.js","tools/exthelper.js","tools/mml2json.js","tools/json2xml.js","tools/xml2json.js","tools/ms2reverse.js","Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RefreshIcon","_ref","className","style","react_default","a","createElement","Object","objectSpread","viewBox","d","mmlExtension","ms2Extension","getMMLExtension","file","name","filter","x","split","toLowerCase","toValidExtension","ext","concat","toUpperCase","allValidMMLs","maxChannels","positionAfterChannelText","matchedStart","textLength","length","index","extractMMLFromText","text","strMatched","matched","mmlTextArr","matcher","exec","push","Error","lastIndexOf","i","slice","replace","deepValueSingleReplace","obj","value","iKey","hasOwnProperty","defaultOptions","attributeNamePrefix","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","json2fullxml","json","options","arguments","undefined","Parser","parse","json2xml","ignoreNameSpace","allowBooleanAttributes","parseNodeValue","parseAttributeValue","trimValues","localeRange","parseTrueNumberOnly","attrValueProcessor","he","decode","isAttributeValue","tagValueProcessor","dencoding","dtitle","dsource","keyMap","deepValueKeyMap","returnedObjArray","result","ms2mmlTemplate","ms2JSONToMMLConverter","settings","encoding","title","source","tracks","findAllMML","arr","apply","toConsumableArray","hasKey","trim","trackStrings","mmlHandler","ms2Handler","getHandler","event","newTemplate","JSON","stringify","textArr","convert3MLEToJSON","target","xmlData","parser","validate","xml2json","type","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","uploadFile","files","validType","setState","changed","convert","e","preventDefault","state","fileReader","FileReader","_this$state$file","onload","handler","download","url","encodeURIComponent","readAsText","window","alert","_this$state","buttonMsg","props","htmlFor","id","accept","onChange","onClick","disabled","src_RefreshIcon","height","fill","paddingRight","href","readOnly","Component","App","src","logo","zIndex","alt","bg","Form_Form","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3af43cc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mushroom.7f63adae.png\";","module.exports = __webpack_public_path__ + \"static/media/bg2.3fec2c14.jpg\";","import React from 'react'\r\nconst RefreshIcon = ({ className, style }) => {\r\n  return (\r\n    <svg className={className} style={{ ...style }} viewBox=\"0 0 65 65\">\r\n      <g>\r\n        <path d=\"m32.5 4.999c-5.405 0-10.444 1.577-14.699 4.282l-5.75-5.75v16.11h16.11l-6.395-6.395c3.18-1.787 6.834-2.82 10.734-2.82 12.171 0 22.073 9.902 22.073 22.074 0 2.899-0.577 5.664-1.599 8.202l4.738 2.762c1.47-3.363 2.288-7.068 2.288-10.964 0-15.164-12.337-27.501-27.5-27.501z\" />\r\n        <path d=\"m43.227 51.746c-3.179 1.786-6.826 2.827-10.726 2.827-12.171 0-22.073-9.902-22.073-22.073 0-2.739 0.524-5.35 1.439-7.771l-4.731-2.851c-1.375 3.271-2.136 6.858-2.136 10.622 0 15.164 12.336 27.5 27.5 27.5 5.406 0 10.434-1.584 14.691-4.289l5.758 5.759v-16.112h-16.111l6.389 6.388z\" />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\nexport default RefreshIcon;","\r\n/**\r\n * Constants\r\n */\r\nconst mmlExtension = \"mml\";\r\nconst ms2Extension = \"ms2mml\";\r\n\r\nexport const getMMLExtension = (file) => {\r\n  if (!file || !file.name) return\r\n  return [mmlExtension, ms2Extension].filter(x => x === file.name.split('.')[1].toLowerCase())[0];\r\n}\r\nexport function getHandlerBuilder(mmlHandler, ms2Handler) {\r\n  return function(type) {\r\n    if (type === mmlExtension) return mmlHandler;\r\n    if (type === ms2Extension) return ms2Handler;\r\n  }\r\n}\r\nconst toValidExtension = (ext) => {\r\n  return `.${ext.toLowerCase()},.${ext.toUpperCase()}`;\r\n}\r\nexport const validMMLs = toValidExtension(mmlExtension)\r\nexport const validMS2MMLs = toValidExtension(ms2Extension)\r\nexport const allValidMMLs = toValidExtension(mmlExtension) + ',' + toValidExtension(ms2Extension)","import ms2mmlTemplate from '../templates/ms2mml.json'\r\n\r\nconst maxChannels = 10\r\n\r\nconst positionAfterChannelText = (matchedStart) => {\r\n  const textLength = matchedStart[0].length;\r\n  return matchedStart.index + textLength;\r\n}\r\n\r\nconst extractMMLFromText = (text) => {\r\n  let matched = [];\r\n  let mmlTextArr = [];\r\n  let matcher = /\\[Channel[0-9]+\\]/g;\r\n  let strMatched;\r\n  // regex match + index position all the channels\r\n  do {\r\n    strMatched = matcher.exec(text);\r\n    if (strMatched) matched.push(strMatched);\r\n  } while (strMatched)\r\n  if (!matched || matched.length === 0) throw Error('Does not contain tracks!');\r\n  // push in ending marker for last channel\r\n  matched.push({ index: text.lastIndexOf('[3MLE EXTENSION]') })\r\n  // extract the text\r\n  for (let i = 0; i < matched.length-1; i++) {\r\n    mmlTextArr.push(\r\n      text.slice(\r\n        positionAfterChannelText(matched[i]),\r\n        matched[i+1].index\r\n      ).replace(/\\s/g, '')\r\n    )\r\n  }\r\n  return mmlTextArr;\r\n}\r\n\r\nfunction deepValueSingleReplace(obj, value, replace) {\r\n  for (let iKey in obj) {\r\n    if (obj.hasOwnProperty(iKey)) {\r\n      if (obj[iKey] === value) {\r\n        obj[iKey] = replace;\r\n        return true;\r\n      } else if (typeof obj[iKey] === 'object' && obj[iKey] !== null) {\r\n        if (deepValueSingleReplace(obj[iKey], value, replace)) return true;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport default function convert3MLEToJSON(text) {\r\n  const newTemplate = JSON.parse(JSON.stringify(ms2mmlTemplate));\r\n  let textArr = extractMMLFromText(text);\r\n  for (let i = 0; i < maxChannels; i++) {\r\n    if (i < textArr.length) deepValueSingleReplace(newTemplate, \"#text\", textArr[i]);\r\n    else deepValueSingleReplace(newTemplate, \"#text\", undefined);\r\n  }\r\n  return newTemplate;\r\n}","import { j2xParser as Parser } from 'fast-xml-parser';\r\n\r\n//default options need not to set\r\nconst defaultOptions = {\r\n    attributeNamePrefix : \"@_\",\r\n    ignoreAttributes : false,\r\n    cdataTagName: \"__cdata\", //default is false\r\n    cdataPositionChar: \"\\\\c\",\r\n    format: true,\r\n    indentBy: \"  \",\r\n    supressEmptyNode: false\r\n};\r\n\r\nexport function json2xml(json, options=defaultOptions) {\r\n  const parser = new Parser(options);\r\n  return parser.parse(json);\r\n}\r\n\r\nexport function json2fullxml(json, options=defaultOptions) {\r\n  return '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n'+json2xml(json, options);\r\n}","import parser from 'fast-xml-parser';\r\nimport he from 'he';\r\n\r\nconst defaultOptions = {\r\n  attributeNamePrefix : \"@_\",\r\n  ignoreAttributes : false,\r\n  ignoreNameSpace : false,\r\n  allowBooleanAttributes : true,\r\n  parseNodeValue : true,\r\n  parseAttributeValue : true,\r\n  trimValues: true,\r\n  cdataTagName: \"__cdata\", //default is 'false'\r\n  cdataPositionChar: \"\\\\c\",\r\n  localeRange: \"\", //To support non english character in tag/attribute values.\r\n  parseTrueNumberOnly: false,\r\n  attrValueProcessor: a => he.decode(a, {isAttributeValue: true}),//default is a=>a\r\n  tagValueProcessor : a => he.decode(a) //default is a=>a\r\n};\r\n\r\nexport default function xml2json(xmlData, options=defaultOptions) {\r\n  if( parser.validate(xmlData) === true) { //optional (it'll return an object in case it's not valid)\r\n    return parser.parse(xmlData, options);\r\n  }\r\n  return {}\r\n}\r\n","import ms2mmlTemplate from '../templates/ms2mml.json'\r\n\r\nconst dencoding = \"iso-8859-1\"\r\nconst dtitle = \"Untitled\"\r\nconst dsource = \"Big Buck Bunny\"\r\nconst keyMap = deepValueKeyMap(ms2mmlTemplate, \"#text\")\r\n\r\nexport default function ms2JSONToMMLConverter(json, settings={encoding: dencoding, title: dtitle, source: dsource}) {\r\n  if (!settings.encoding) settings.encoding = dencoding;\r\n  if (!settings.title) settings.title = dtitle;\r\n  if (!settings.source) settings.source = dsource;\r\n  let tracks = findAllMML(keyMap, json)\r\n\r\n  var trackStrings = '';\r\n  for (let i=0; i < tracks.length; i++) {\r\n    trackStrings += `[Channel${i+1}]\\n${tracks[i]}\\n`;\r\n  }\r\n  return `[Settings]\\nEncoding=${settings.encoding}\\nTitle=${settings.title}\\nSource=${settings.source}\\nMemo=\\n${trackStrings}`;\r\n}\r\n\r\nfunction findAllMML(obj, json) {\r\n  let arr = []\r\n  for (let iKey in obj) {\r\n    if (typeof obj[iKey] === 'object' && obj[iKey] !== null) {\r\n      arr.push(...findAllMML(obj[iKey], json[iKey]));\r\n    } else if (typeof obj[iKey] === 'string') {\r\n      let hasKey = json.hasOwnProperty(iKey) && json[iKey].hasOwnProperty(obj[iKey]);\r\n      if (hasKey) arr.push(json[iKey][obj[iKey]].trim());\r\n    }\r\n  }\r\n  return arr\r\n}\r\n\r\nfunction deepValueKeyMap(obj, value) {\r\n  let returnedObjArray = {}\r\n  for (let iKey in obj) {\r\n    if (obj.hasOwnProperty(iKey)) {\r\n      if (obj[iKey] === value) {\r\n        return iKey\r\n      } else if (typeof obj[iKey] === 'object' && obj[iKey] !== null) {\r\n        let result = deepValueKeyMap(obj[iKey], value);\r\n        if (result) returnedObjArray[iKey] = result;\r\n      }\r\n    }\r\n  }\r\n  return returnedObjArray;\r\n}","import React, { Component } from 'react';\r\nimport parser from 'fast-xml-parser'\r\nimport RefreshIcon from './RefreshIcon'\r\n\r\nimport { getHandlerBuilder, getMMLExtension, allValidMMLs } from './tools/exthelper'\r\nimport convert3MLEToJSON from './tools/mml2json';\r\nimport { json2fullxml } from './tools/json2xml'\r\nimport xml2json from './tools/xml2json'\r\nimport ms2JSONToMMLConverter from './tools/ms2reverse';\r\n\r\nimport './Form.css';\r\n\r\nconst MMLHandler = (event) => {\r\n  let json = convert3MLEToJSON(event.target.result);\r\n  return json2fullxml(json);\r\n}\r\nconst MS2MMLHandler = (event, name) => {\r\n  let json = xml2json(event.target.result);\r\n  return ms2JSONToMMLConverter(json, { title: name });\r\n}\r\nconst getHandler = getHandlerBuilder(MMLHandler, MS2MMLHandler);\r\n\r\nexport default class Form extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      file: null,\r\n      result: ''\r\n    };\r\n    window.parser = parser;\r\n  }\r\n\r\n  uploadFile = (event) => {\r\n    const file = event.target.files[0];\r\n    const validType = getMMLExtension(file);\r\n    if (!validType) {\r\n      this.setState({ file: null })\r\n      return false;\r\n    }\r\n    this.setState({\r\n      changed: true,\r\n      file: {\r\n        name: file.name.split('.')[0],\r\n        type: validType,\r\n        text: file\r\n      }\r\n    })\r\n  }\r\n\r\n  convert = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.file) {\r\n      window.alert(\"Please select a valid MS2MML/3MLE file\");\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    const { name, type, text } = this.state.file;\r\n    fileReader.onload = (event) => {\r\n      let handler = getHandler(type)\r\n      let result = handler(event, name)\r\n      this.setState({\r\n        result: result,\r\n        changed: false,\r\n        download: {\r\n          url: 'data:text/plain;charset=utf-8,' + encodeURIComponent(result),\r\n          name: name + '.' + (type === 'mml' ? 'ms2mml' : 'mml')\r\n        }\r\n      })\r\n    }\r\n    fileReader.readAsText(text);\r\n  }\r\n\r\n  render() {\r\n    const { changed, result, download } = this.state;\r\n    const buttonMsg = (this.state.file) ? 'Generate ' + (this.state.file.type === 'mml' ? 'MS2MML' : '3MLE MML') : 'Please select a file to upload';\r\n    return (\r\n      <form className={\"Form-div \" + this.props.className}>\r\n        <div className=\"Form-leftDiv\">\r\n          <div className=\"buttonDiv\"><label className=\"label\" htmlFor=\"file-input\">Select any MML/MS2MML file</label></div>\r\n          <div><p className=\"arrowDown\">&#x25bc;</p></div>\r\n          <div><input name=\"file-input\" id=\"file-input\" type=\"file\" accept={allValidMMLs} onChange={this.uploadFile} /></div>\r\n          <div className=\"buttonDiv\">\r\n            <button className=\"label\" onClick={this.convert} disabled={!this.state.file}>\r\n              {(changed) ? <RefreshIcon style={{ height: '0.8em', fill: 'currentColor', paddingRight: 10 }} /> : <div />}\r\n              {buttonMsg}\r\n            </button>\r\n          </div>\r\n          {\r\n            (download) ? \r\n            <div>\r\n              <div><p className=\"arrowDown\">&#x25bc;</p></div>\r\n              <div className=\"buttonDiv\"><a href={download.url} className=\"label\" download={download.name} onClick={this.download}>Download</a></div>\r\n            </div>\r\n            : <div />\r\n          }\r\n        </div>\r\n        <div className=\"Form-rightDiv\">\r\n          <h1>Preview</h1>\r\n          <textarea className=\"Form-textResult\" value={result} readOnly/>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n}","import React, { Component } from 'react';\nimport Form from './Form';\n\nimport logo from './mushroom.png';\nimport bg from './bg2.jpg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" style={{ zIndex: 2 }} alt=\"logo\" />\n          <img src={bg} className=\"App-bg\" alt=\"bg\" />\n          <h1 style={{ zIndex: 3 }}>3MLE to MS2MML converter</h1>\n        </header>\n        <Form className=\"App-form\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}